getwd()
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/wongy/Downloads/Machine Learning for hackers/ML1"")
setwd("C:/Users/wongy/Downloads/Machine Learning for hackers/ML1")
getwd()
getwd()
setwd("C:/Users/wongy/Downloads/Machine Learning for hackers/ML1")
setwd("C:/Users/wongy/Downloads/Machine Learning for hackers/ML1")
getwd()
library(ggplot2) #visualizations
library(plyr) #data manipulation
library(scales) #fix date formats in plots
ufo <- read.delim(file.path("data","ufo","ufo_awesome.tsv"),#tab-delimited file, use 'read.delim' and set the separator
sep = "\t",
stringsAsFactors = FALSE, #we don't want the strings to be converted to factor types
header = F, #since this data does not have header labels in the first row
na.strings = "")
summary(ufo)
head(ufo)
names(ufo) <- c("DateOccurred","DateReported",
"Location","ShortDescription",
"Duration","LongDescription")
View(ufo)
View(ufo)
good.rows <- ifelse(nchar(ufo$DateOccurred)!=8|
nchar(ufo$DateReported)!=8,
FALSE,
TRUE)
ufo <- ufo[good.rows,]
ufo$DateOccurred <- as.Date(ufo$DateOccurred,format = "%Y%m%d")
ufo$DateReported <- as.Date(ufo$DateReported,format = "%Y%m%d")
View(ufo)
View(ufo)
?strsplit
get.location <- function(l){
split.location <- tryCatch(strsplit(l,",")[[1]],
error=function(e) return(c(NA,NA)))
clean.location <- gsub("^ ","",split.location)
if(length(clean.location)>2){
return(c(NA,NA))
}else{
return(clean.location)
}
}
#we use 'lapply' to return a list with [City,State] vector as each element
city.state <- lapply(ufo$Location,get.location)
#we use 'do.call' to collapse the list to an N-by-2 matrix
location.matrix <- do.call(rbind,city.state)
#do.call executes a function call over a list.
ufo <- transform(ufo,
USCity=location.matrix[,1],
USState=tolower(location.matrix[,2]),
stringsAsFactor=FALSE)
# Next step, we will strip out non-US incidents
# Insert NA's where there are non-US cities
ufo$USState <- state.abb[match(ufo$USState, state.abb)]
# Finally, we'll use 'subset' to examine only events in the United States and convert
# states to factors, i.e., a categorical variable.
ufo.us <- subset(ufo, !is.na(USState))
summary(ufo.us)
head(ufo.us)
get.location <- function(l){
split.location <- tryCatch(strsplit(l,",")[[1]],
error=function(e) return(c(NA,NA)))
clean.location <- gsub("^ ","",split.location)
if(length(clean.location)>2){
return(c(NA,NA))
}else{
return(clean.location)
}
}
#we use 'lapply' to return a list with [City,State] vector as each element
city.state <- lapply(ufo$Location,get.location)
#we use 'do.call' to collapse the list to an N-by-2 matrix
location.matrix <- do.call(rbind,city.state)
#do.call executes a function call over a list.
ufo <- transform(ufo,
USCity=location.matrix[,1],
USState=tolower(location.matrix[,2]),
stringsAsFactor=FALSE)
# Next step, we will strip out non-US incidents
# Insert NA's where there are non-US cities
us.states<-c("ak","al","ar","az","ca","co","ct","de","fl","ga","hi","ia","id","il",
"in","ks","ky","la","ma","md","me","mi","mn","mo","ms","mt","nc","nd","ne","nh",
"nj","nm","nv","ny","oh","ok","or","pa","ri","sc","sd","tn","tx","ut","va","vt",
"wa","wi","wv","wy")
ufo$USState<-us.states[match(ufo$USState,us.states)]
ufo$USCity[is.na(ufo$USState)]<-NA
# Finally, we'll use 'subset' to examine only events in the United States and convert
# states to factors, i.e., a categorical variable.
ufo.us<-subset(ufo, !is.na(USState))
head(ufo.us)
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50 years")
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50 years")
quick.hist
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50 years")
plot(quick.hist)
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50 years")
ggplot(quick.hist)
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50 years")
#quick.hist <-
ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50 years")
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50 years")
ggsave(plot = quick.hist,
filename = file.path("images", "quick_hist.pdf"),
height = 6,
width = 8)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/wongy/Downloads/Machine Learning for hackers/ML1")
library(ggplot2) #visualizations
library(plyr) #data manipulation
library(scales) #fix date formats in plots
ufo <- read.delim(file.path("data","ufo","ufo_awesome.tsv"),#tab-delimited file, use 'read.delim' and set the separator
sep = "\t",
stringsAsFactors = FALSE, #we don't want the strings to be converted to factor types
#It is always a good practice to switch off this default
header = F, #since this data does not have header labels in the first row
na.strings = "") #there are many empty elements in the data, and we want to set those to the special R value NA
summary(ufo)
head(ufo)
names(ufo) <- c("DateOccurred","DateReported",
"Location","ShortDescription",
"Duration","LongDescription")
#ufo$DateOccurred <-as.Date(ufo$DateOccurred,format="%Y%m%d")
good.rows <- ifelse(nchar(ufo$DateOccurred)!=8|
nchar(ufo$DateReported)!=8,
FALSE,
TRUE)
ufo <- ufo[good.rows,]
ufo$DateOccurred <- as.Date(ufo$DateOccurred,format = "%Y%m%d")
ufo$DateReported <- as.Date(ufo$DateReported,format = "%Y%m%d")
get.location <- function(l){
split.location <- tryCatch(strsplit(l,",")[[1]],
error=function(e) return(c(NA,NA)))
clean.location <- gsub("^ ","",split.location)
if(length(clean.location)>2){
return(c(NA,NA))
}else{
return(clean.location)
}
}
#we use 'lapply' to return a list with [City,State] vector as each element
city.state <- lapply(ufo$Location,get.location)
#we use 'do.call' to collapse the list to an N-by-2 matrix
location.matrix <- do.call(rbind,city.state)
#do.call executes a function call over a list.
ufo <- transform(ufo,
USCity=location.matrix[,1],
USState=tolower(location.matrix[,2]),
stringsAsFactor=FALSE)
# Next step, we will strip out non-US incidents
# Insert NA's where there are non-US cities
us.states<-c("ak","al","ar","az","ca","co","ct","de","fl","ga","hi","ia","id","il",
"in","ks","ky","la","ma","md","me","mi","mn","mo","ms","mt","nc","nd","ne","nh",
"nj","nm","nv","ny","oh","ok","or","pa","ri","sc","sd","tn","tx","ut","va","vt",
"wa","wi","wv","wy")
ufo$USState<-us.states[match(ufo$USState,us.states)]
ufo$USCity[is.na(ufo$USState)]<-NA
# Finally, we'll use 'subset' to examine only events in the United States and convert
# states to factors, i.e., a categorical variable.
ufo.us<-subset(ufo, !is.na(USState))
quick.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50 years")
ggsave(plot = quick.hist,
filename = file.path("images", "quick_hist.pdf"),
height = 6,
width = 8)
quick.hist <- ggplot(ufo.us, aes(DateOccurred)) +
geom_histogram()
#scale_x_date(breaks = "50 years")
ggsave(plot = quick.hist,
filename = file.path("images", "quick_hist.pdf"),
height = 6,
width = 8)
gplot(ufo.us, aes(DateOccurred)) +
geom_histogram()
ggplot(ufo.us, aes(DateOccurred)) +
geom_histogram()
#scale_x_date(breaks = "50 years")
# ggsave(plot = quick.hist,
#        filename = file.path("images", "quick_hist.pdf"),
#        height = 6,
#        width = 8)
ggplot(ufo.us, aes(DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50 years")
ggplot(ufo.us, aes(DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50")
ggplot(ufo.us, aes(DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = 50)
ggplot(ufo.us, aes(DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50 years")
ggplot(ufo.us, aes(DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50 year")
ggplot(ufo.us, aes(DateOccurred)) +
geom_histogram() +
scale_x_date(breaks = "50-year")
ggplot(ufo.us, aes(DateOccurred)) +
geom_histogram()
ggsave(plot = quick.hist,
filename = file.path("images", "quick_hist.pdf"),
height = 6,
width = 8)
ggplot(ufo.us, aes(DateOccurred)) +
geom_histogram()
ufo.us <- subset(ufo.us, DateOccurred >= as.Date("1990-01-01"))
new.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram(aes(fill='white', color='red')) +
scale_fill_manual(values=c('white'='white'), guide="none") +
scale_color_manual(values=c('red'='red'), guide="none") +
scale_x_date(breaks = "50 years")
new.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram(aes(fill='white', color='red')) +
scale_fill_manual(values=c('white'='white'), guide="none") +
scale_color_manual(values=c('red'='red'), guide="none") +
scale_x_date(breaks = "50 years")
new.hist
new.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram(aes(fill='white', color='red')) +
scale_fill_manual(values=c('white'='white'), guide="none") +
scale_color_manual(values=c('red'='red'), guide="none")
new.hist
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/wongy/Downloads/Machine Learning for hackers/ML1")
library(ggplot2) #visualizations
library(plyr) #data manipulation
library(scales) #fix date formats in plots
ufo <- read.delim(file.path("data","ufo","ufo_awesome.tsv"),#tab-delimited file, use 'read.delim' and set the separator
sep = "\t",
stringsAsFactors = FALSE, #we don't want the strings to be converted to factor types
#It is always a good practice to switch off this default
header = F, #since this data does not have header labels in the first row
na.strings = "") #there are many empty elements in the data, and we want to set those to the special R value NA
summary(ufo)
head(ufo)
names(ufo) <- c("DateOccurred","DateReported",
"Location","ShortDescription",
"Duration","LongDescription")
#ufo$DateOccurred <-as.Date(ufo$DateOccurred,format="%Y%m%d")
good.rows <- ifelse(nchar(ufo$DateOccurred)!=8|
nchar(ufo$DateReported)!=8,
FALSE,
TRUE)
ufo <- ufo[good.rows,]
ufo$DateOccurred <- as.Date(ufo$DateOccurred,format = "%Y%m%d")
ufo$DateReported <- as.Date(ufo$DateReported,format = "%Y%m%d")
get.location <- function(l){
split.location <- tryCatch(strsplit(l,",")[[1]],
error=function(e) return(c(NA,NA)))
clean.location <- gsub("^ ","",split.location)
if(length(clean.location)>2){
return(c(NA,NA))
}else{
return(clean.location)
}
}
#we use 'lapply' to return a list with [City,State] vector as each element
city.state <- lapply(ufo$Location,get.location)
#we use 'do.call' to collapse the list to an N-by-2 matrix
location.matrix <- do.call(rbind,city.state)
#do.call executes a function call over a list.
ufo <- transform(ufo,
USCity=location.matrix[,1],
USState=tolower(location.matrix[,2]),
stringsAsFactor=FALSE)
# Next step, we will strip out non-US incidents
# Insert NA's where there are non-US cities
us.states<-c("ak","al","ar","az","ca","co","ct","de","fl","ga","hi","ia","id","il",
"in","ks","ky","la","ma","md","me","mi","mn","mo","ms","mt","nc","nd","ne","nh",
"nj","nm","nv","ny","oh","ok","or","pa","ri","sc","sd","tn","tx","ut","va","vt",
"wa","wi","wv","wy")
ufo$USState<-us.states[match(ufo$USState,us.states)]
ufo$USCity[is.na(ufo$USState)]<-NA
# Finally, we'll use 'subset' to examine only events in the United States and convert
# states to factors, i.e., a categorical variable.
ufo.us<-subset(ufo, !is.na(USState))
ggplot(ufo.us, aes(DateOccurred)) +
geom_histogram()
ufo.us <- subset(ufo.us, DateOccurred >= as.Date("1990-01-01"))
new.hist <- ggplot(ufo.us, aes(x = DateOccurred)) +
geom_histogram(aes(fill='white', color='red')) +
scale_fill_manual(values=c('white'='white'), guide="none") +
scale_color_manual(values=c('red'='red'), guide="none")
new.hist
ufo.us$YearMonth <- strftime(ufo.us$DateOccurred, format = "%Y-%m")
sightings.counts <- ddply(ufo.us, .(USState,YearMonth), nrow)
date.range <- seq.Date(from = as.Date(min(ufo.us$DateOccurred)),
to = as.Date(max(ufo.us$DateOccurred)),
by = "month")
date.strings <- strftime(date.range, "%Y-%m")
states.dates <- lapply(us.states, function(s) cbind(s, date.strings))
states.dates <- data.frame(do.call(rbind, states.dates),
stringsAsFactors = FALSE)
all.sightings <- merge(states.dates,
sightings.counts,
by.x = c("s", "date.strings"),
by.y = c("USState", "YearMonth"),
all = TRUE)
View(states.dates)
View(states.dates)
View(states.dates)
View(states.dates)
View(all.sightings)
View(all.sightings)
names(all.sightings) <- c("State", "YearMonth", "Sightings")
# all.sightings$Sightings[is.na(all.sightings$Sightings)] <- 0
# all.sightings$YearMonth <- as.Date(rep(date.range, length(us.states)))
# all.sightings$State <- as.factor(all.sightings$State)
names(all.sightings) <- c("State", "YearMonth", "Sightings")
all.sightings$Sightings[is.na(all.sightings$Sightings)] <- 0
# all.sightings$YearMonth <- as.Date(rep(date.range, length(us.states)))
# all.sightings$State <- as.factor(all.sightings$State)
?strftime
names(all.sightings) <- c("State", "YearMonth", "Sightings")
all.sightings$Sightings[is.na(all.sightings$Sightings)] <- 0
all.sightings$YearMonth <- as.Date(rep(date.range, length(us.states)))
# all.sightings$State <- as.factor(all.sightings$State)
names(all.sightings) <- c("State", "YearMonth", "Sightings")
all.sightings$Sightings[is.na(all.sightings$Sightings)] <- 0
all.sightings$YearMonth <- as.Date(rep(date.range, length(us.states)))
all.sightings$State <- as.factor(all.sightings$State)
View(all.sightings)
View(all.sightings)
state.plot <- ggplot(all.sightings, aes(x = YearMonth,y = Sightings)) +
geom_line(aes(color = "darkblue")) +
facet_wrap(~State, nrow = 10, ncol = 5) +
theme_bw() +
scale_color_manual(values = c("darkblue" = "darkblue"), guide = "none") +
scale_x_date(breaks = "5 years", labels = date_format('%Y')) +
xlab("Years") +
ylab("Number of Sightings") +
ggtitle("Number of UFO sightings by Month-Year and U.S. State (1990-2010)")
state.plot <- ggplot(all.sightings, aes(x = YearMonth,y = Sightings)) +
geom_line(aes(color = "darkblue")) +
facet_wrap(~State, nrow = 10, ncol = 5) +
theme_bw() +
scale_color_manual(values = c("darkblue" = "darkblue"), guide = "none") +
scale_x_date(breaks = "5 years", labels = date_format('%Y')) +
xlab("Years") +
ylab("Number of Sightings") +
ggtitle("Number of UFO sightings by Month-Year and U.S. State (1990-2010)")
state.plot
state.plot <- ggplot(all.sightings, aes(x = YearMonth,y = Sightings)) +
geom_line(aes(color = "darkblue")) +
facet_wrap(~State, nrow = 10, ncol = 5) +
theme_bw() +
scale_color_manual(values = c("darkblue" = "darkblue"), guide = "none") +
#  scale_x_date(breaks = "5 years", labels = date_format('%Y')) +
xlab("Years") +
ylab("Number of Sightings") +
ggtitle("Number of UFO sightings by Month-Year and U.S. State (1990-2010)")
state.plot
